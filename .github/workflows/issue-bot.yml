name: AI Issue Bot

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  respond:
    runs-on: ubuntu-latest

    steps:
      - name: AI GitHub Bot
        uses: actions/github-script@v6
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          script: |
            const isIssue = context.eventName === 'issues';
            const isComment = context.eventName === 'issue_comment';

            let message = '';
            let issueNumber = 0;

            if (isIssue) {
              message = `Issue Title: ${context.payload.issue.title}\nIssue Body: ${context.payload.issue.body}`;
              issueNumber = context.payload.issue.number;
            } else if (isComment) {
              message = `Comment: ${context.payload.comment.body}`;
              issueNumber = context.payload.issue.number;
            }

            const prompt = `You are a professional backend developer bot named RatheeshBot. Help answer the following GitHub query in a helpful and polite tone:\n\n${message}`;

            const openaiResponse = await fetch("https://api.openai.com/v1/chat/completions", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${process.env.OPENAI_API_KEY}`
              },
              body: JSON.stringify({
                model: "gpt-3.5-turbo",
                messages: [
                  {
                    role: "user",
                    content: prompt
                  }
                ]
              })
            });

            const result = await openaiResponse.json();

            if (!result.choices || result.choices.length === 0) {
              throw new Error("OpenAI API failed: " + JSON.stringify(result, null, 2));
            }

            const reply = result.choices[0].message.content;

            await github.rest.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: reply
            });

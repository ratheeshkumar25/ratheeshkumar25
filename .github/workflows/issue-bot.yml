name: AI Issue Bot

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  respond:
    runs-on: ubuntu-latest

    steps:
      - name: Use GitHub Script with OpenRouter
        uses: actions/github-script@v6
        with:
          script: |
            const message = context.eventName === 'issues'
              ? `${context.payload.issue.title}\n\n${context.payload.issue.body}`
              : context.payload.comment.body;

            const issueNumber = context.payload.issue.number;
            const lowerMessage = message.toLowerCase();

            let predefinedReply = null;

            if (lowerMessage.includes("experience")) {
              predefinedReply = `ðŸš€ **Experience**\n\nI have over **1.8 years** of experience with **Go (Golang)**. I'm passionate about building **scalable systems** using Go.`;
            } else if (lowerMessage.includes("project")) {
              predefinedReply = `ðŸ“¦ **Projects**\n\nCheck out my key projects:\n\n- ðŸ”¹ [Opti Cutter](https://github.com/ratheeshkumar25/opti_cutter_final): A manufacturing optimization tool built in Go.\n- ðŸ”¹ [Docker Restaurant](https://github.com/ratheeshkumar25/docker-restaurant): A complete restaurant backend system using Go, PostgreSQL, and Docker.`;
            } else if (lowerMessage.includes("contact")) {
              predefinedReply = `ðŸ“¬ **Contact**\n\nYou can reach me at: [ratheeshgopinadhkumar@gmail.com](mailto:ratheeshgopinadhkumar@gmail.com)`;
            }

            if (predefinedReply) {
              await github.rest.issues.createComment({
                issue_number: issueNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: predefinedReply
              });
              return;
            }

            const prompt = `You are a professional backend developer bot named RatheeshBot. Help answer this GitHub query politely and helpfully:\n\n${message}`;
            const openRouterKey = process.env.OPENROUTER_API_KEY;

            const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${openRouterKey}`,
                'Content-Type': 'application/json',
                'HTTP-Referer': 'https://github.com/ratheeshkumar25',
                'X-Title': 'GitHub Issue Bot'
              },
              body: JSON.stringify({
                model: 'mistralai/mistral-7b-instruct',
                messages: [
                  { role: 'system', content: 'You are RatheeshBot, a helpful backend development assistant.' },
                  { role: 'user', content: prompt }
                ]
              })
            });

            if (!response.ok) {
              const errorText = await response.text();
              throw new Error(`OpenRouter API error (${response.status}): ${errorText}`);
            }

            const data = await response.json();
            const reply = data.choices?.[0]?.message?.content || "Sorry, I couldn't generate a reply.";

            await github.rest.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: reply
            });

        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
